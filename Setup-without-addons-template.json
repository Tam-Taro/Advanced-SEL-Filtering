{
  "metadata": {
    "name": "Tamtaro Setup without Addons",
    "description": "Fully configured AIOStreams setup based on my recommended filters, sort orders, and SEL v2.5.1. Designed for those who want high-quality results with minimal clutter. This template will not overwrite current addons, debrid credentials (click Skip debrid credentials screen during Template Import) or proxy settings. For catalogs, refer to my AIOMetadata config over Discord.",
    "author": "Tamtaro",
    "category": "Debrid/Usenet/P2P",
    "serviceRequired": false
  },
  "config": {
    "formatter": {
      "id": "custom",
      "definition": {
        "name": "  {stream.resolution::=2160p[\"𝟒𝐊\"||\"\"]}{stream.resolution::=1440p[\"𝟐𝐊\"||\"\"]}{stream.resolution::=1080p[\"𝟏𝟎𝟖𝟎𝐏\"||\"\"]}{stream.resolution::=720p[\"𝟕𝟐𝟎𝐏\"||\"\"]}{stream.resolution::=576p[\"𝟓𝟕𝟔𝐏\"||\"\"]}{stream.resolution::=540p[\"𝟓𝟒𝟎𝐏\"||\"\"]}{stream.resolution::=480p[\"𝟒𝟖𝟎𝐏\"||\"\"]}{stream.resolution::=360p[\"𝟑𝟔𝟎𝐏\"||\"\"]}{stream.resolution::=240p[\"𝟐𝟒𝟎𝐏 \"||\"\"]}{stream.resolution::=144p[\"𝟏𝟒𝟒𝐏\"||\"\"]} {stream.type::replace('debrid',' ')::replace('p2p','⁽ᵖ²ᵖ⁾')::replace('live','⁽ˡᶦᵛᵉ⁾')::replace('http','⁽ʷᵉᵇ ˢᵗʳᵉᵃᵐ⁾')::replace('usenet','⁽ᵘˢᵉⁿᵉᵗ⁾')::replace('statistic','⁽ˢᵗᵃᵗˢ⁾')::replace('external','⁽ᵉˣᵗᵉʳⁿᵃˡ⁾')::replace('error','⁽ᵉʳʳᵒʳ⁾')::replace('youtube','⁽ʸᵒᵘᵗᵘᵇᵉ⁾')}{service.cached::istrue[\"⚡\"||\"\"]}{service.cached::isfalse[\"⏳\"||\"\"]}      \n{stream.quality::exists[\"「{stream.quality::title}」\"||\"\"]}",
        "description": "{stream.title::exists::and::stream.library::isfalse[\"✎ {stream.title}\"||\"\"]}{stream.title::exists::and::stream.library::istrue[\"☁︎  {stream.title}\"||\"\"]}{stream.year::exists[\" ({stream.year})\"||\"\"]} {stream.season::>=0[\" S\"||\"\"]}{stream.season::<=9[\"0\"||\"\"]}{stream.season::>0[\"{stream.season}\"||\"\"]}{stream.episode::>=0[\" · E\"||\"\"]}{stream.episode::<=9[\"0\"||\"\"]}{stream.episode::>0[\"{stream.episode}\"||\"\"]}\n{stream.encode::exists[\"▣  {stream.encode} \"||\"\"]}{stream.visualTags::exists[\"✧  {stream.visualTags::join(' · ')} \"||\"\"]}\n{stream.audioTags::exists[\"♬  {stream.audioTags::join(' · ')} \"||\"\"]}{stream.audioChannels::exists[\" ☊  {stream.audioChannels::join(' · ')}\"||\"\"]}\n{stream.size::>0[\"◧  {stream.size::bytes} \"||\"\"]}{stream.folderSize::>0[\"/ {stream.folderSize::bytes}\"||\"\"]}{service.cached::isfalse::or::stream.type::=p2p::and::stream.seeders::>0[\" ⇋ {stream.seeders}𖧧 \"||\"\"]}{stream.duration::>0[\" · {stream.duration::time}\"||\"\"]}{stream.type::=usenet::and::stream.age::exists[\" · {stream.age} \"||\"\"]}{stream.languages::exists[\" · ⚐ {stream.smallLanguageCodes::join(' · ')::replace('ᴅᴜᴀʟ ᴀᴜᴅɪᴏ','ᴅᴜᴏ')::replace('ᴅᴜʙʙᴇᴅ','ᴅᴜʙ')}\"||\"\"]}\n{stream.proxied::istrue[\"🝰  \"||\"○  \"]}{service.shortName::exists[\"[{service.shortName}] \"||\"\"]}{addon.name}{stream.releaseGroup::exists[\" · {stream.releaseGroup}\"||\"\"]}{stream.indexer::exists::and::stream.type::=usenet[\" · {stream.indexer}\"||\"\"]}\n{stream.regexMatched::exists[\"»  {stream.regexMatched::Title}\"||\"\"]} {stream.message::exists[\"ⓘ  {stream.message}\"||\"\"]}"
      }
    },
    "preferredQualities": [
      "BluRay REMUX",
      "BluRay",
      "WEB-DL",
      "WEBRip",
      "HDRip",
      "HC HD-Rip",
      "DVDRip",
      "HDTV",
      "Unknown"
    ],
    "preferredResolutions": [
      "2160p",
      "1440p",
      "1080p",
      "720p",
      "Unknown",
      "576p",
      "480p",
      "360p",
      "240p",
      "144p"
    ],
    "excludedQualities": [],
    "excludedVisualTags": [
      "3D",
      "H-OU",
      "H-SBS"
    ],
    "sortCriteria": {
      "global": [
        {
          "key": "cached",
          "direction": "desc"
        }
      ],
      "series": [],
      "anime": [],
      "cached": [
        {
          "key": "resolution",
          "direction": "desc"
        },
        {
          "key": "library",
          "direction": "desc"
        },
        {
          "key": "quality",
          "direction": "desc"
        },
        {
          "key": "regexPatterns",
          "direction": "desc"
        },
        {
          "key": "streamType",
          "direction": "desc"
        },
        {
          "key": "visualTag",
          "direction": "desc"
        },
        {
          "key": "audioTag",
          "direction": "desc"
        },
        {
          "key": "encode",
          "direction": "desc"
        },
        {
          "key": "language",
          "direction": "desc"
        },
        {
          "key": "size",
          "direction": "desc"
        },
        {
          "key": "seeders",
          "direction": "desc"
        }
      ],
      "uncached": [
        {
          "key": "resolution",
          "direction": "desc"
        },
        {
          "key": "library",
          "direction": "desc"
        },
        {
          "key": "streamType",
          "direction": "desc"
        },
        {
          "key": "regexPatterns",
          "direction": "desc"
        },
        {
          "key": "seeders",
          "direction": "desc"
        },
        {
          "key": "quality",
          "direction": "desc"
        },
        {
          "key": "language",
          "direction": "desc"
        },
        {
          "key": "size",
          "direction": "desc"
        }
      ],
      "cachedMovies": []
    },
    "deduplicator": {
      "enabled": true,
      "multiGroupBehaviour": "aggressive",
      "keys": [
        "filename",
        "infoHash",
        "smartDetect"
      ],
      "cached": "single_result",
      "uncached": "single_result",
      "p2p": "single_result"
    },
    "autoPlay": {
      "attributes": [
        "service",
        "proxied",
        "resolution",
        "quality",
        "encode",
        "audioTags",
        "visualTags",
        "languages",
        "releaseGroup"
      ]
    },
    "cacheAndPlay": {
      "enabled": true,
      "streamTypes": [
        "usenet"
      ]
    },
    "statistics": {
      "enabled": false,
      "position": "top",
      "statsToShow": [
        "addon",
        "filter"
      ]
    },
    "hideErrorsForResources": [
      "stream"
    ],
    "excludeUncachedFromAddons": [],
    "excludeUncachedFromServices": [],
    "excludeUncachedFromStreamTypes": [],
    "excludeCachedFromAddons": [],
    "excludeCachedFromServices": [],
    "excludeCachedFromStreamTypes": [],
    "preferredEncodes": [
      "AV1",
      "HEVC",
      "AVC",
      "Unknown"
    ],
    "preferredStreamTypes": [
      "usenet",
      "debrid",
      "p2p",
      "http",
      "live"
    ],
    "preferredVisualTags": [
      "HDR+DV",
      "HDR10+",
      "HDR10",
      "DV",
      "HDR",
      "10bit",
      "IMAX",
      "AI",
      "SDR",
      "Unknown"
    ],
    "preferredAudioTags": [
      "Atmos",
      "DD+",
      "DD"
    ],
    "requiredLanguages": [
      "English",
      "Japanese",
      "Korean",
      "Dual Audio",
      "Dubbed",
      "Multi",
      "Unknown"
    ],
    "excludedLanguages": [],
    "includedLanguages": [],
    "preferredLanguages": [
      "English",
      "Japanese",
      "Korean",
      "Dubbed",
      "Dual Audio",
      "Multi",
      "Unknown"
    ],
    "trusted": false,
    "excludedResolutions": [],
    "includedResolutions": [],
    "requiredResolutions": [],
    "includedQualities": [],
    "requiredQualities": [],
    "includedVisualTags": [],
    "requiredVisualTags": [],
    "excludedAudioTags": [],
    "includedAudioTags": [],
    "requiredAudioTags": [],
    "excludedAudioChannels": [],
    "includedAudioChannels": [],
    "requiredAudioChannels": [],
    "preferredAudioChannels": [],
    "excludedStreamTypes": [],
    "includedStreamTypes": [],
    "requiredStreamTypes": [],
    "excludedEncodes": [],
    "includedEncodes": [],
    "requiredEncodes": [],
    "excludedRegexPatterns": [],
    "includedKeywords": [],
    "excludeSeederRange": [
      0,
      1000
    ],
    "includeSeederRange": [
      0,
      1000
    ],
    "requiredSeederRange": [
      0,
      1000
    ],
    "seederRangeTypes": [],
    "excludeUncached": false,
    "excludeUncachedMode": "or",
    "excludedStreamExpressions": [
      "count(type(streams, 'debrid', 'usenet')) > 0?  ( count(type(cached(streams), 'debrid','usenet')) < 5 ? [] :  merge( count(regexMatched(streams)) > 0 ? seeders(merge(regexMatched(negate(uncached(type(streams, 'usenet')),uncached(streams)), '', 'Bad'), type(streams, 'p2p')), 0,10):seeders(merge(negate(uncached(type(streams, 'usenet')),uncached(streams)), type(streams, 'p2p')), 0,10),  count(resolution(cached(streams), '2160p','1440p')) > 10 ? resolution(streams, '720p','576p','480p','360p','240p','144p','Unknown') :  count(resolution(cached(streams), '2160p','1440p','1080p')) > 10 ? slice(resolution(streams, '720p','576p','480p','360p','240p','144p','Unknown'), 10) :   count(resolution(cached(streams), '2160p','1440p','1080p','720p')) > 10 ? slice(resolution(streams, '576p','480p','360p','240p','144p','Unknown'), 5) :   []    ) ): count(type(streams, 'p2p','http')) < 5 ? [] :  merge(count(seeders(type(streams, 'p2p'), 10))> 5? seeders(type(streams, 'p2p'), 0,10):[],  count(resolution(streams, '2160p','1440p')) > 10 ? resolution(streams, '720p','576p','480p','360p','240p','144p','Unknown') :  count(resolution(streams, '2160p','1440p','1080p')) > 10 ? slice(resolution(streams, '720p','576p','480p','360p','240p','144p','Unknown'), 10) :   count(resolution(streams, '2160p','1440p','1080p','720p')) > 10 ? slice(resolution(streams, '576p','480p','360p','240p','144p','Unknown'), 5) : [])",
      "merge(   count(resolution(quality(streams,'Bluray REMUX'),'2160p')) > 3 ? slice(resolution(quality(streams,'Bluray REMUX'),'2160p'), 3) : [],  count(resolution(quality(streams,'Bluray REMUX'),'1440p','1080p')) > 3 ? slice(resolution(quality(streams,'Bluray REMUX'),'1440p','1080p'), 3) : [],  count(resolution(quality(streams,'Bluray REMUX'),'720p','Unknown')) > 1 ? slice(resolution(quality(streams,'Bluray REMUX'),'720p','Unknown'), 1) : [],  count(resolution(quality(streams,'Bluray'),'2160p')) > 3 ? slice(resolution(quality(streams,'Bluray'),'2160p'), 3) : [],  count(resolution(quality(streams,'Bluray'),'1440p','1080p')) > 3 ? slice(resolution(quality(streams,'Bluray'),'1440p','1080p'), 3) : [],  count(resolution(quality(streams,'Bluray'),'720p','Unknown')) > 1 ? slice(resolution(quality(streams,'Bluray'),'720p','Unknown'), 1) : [],  count(resolution(quality(streams,'WEB-DL'),'2160p')) > 3 ? slice(resolution(quality(streams,'WEB-DL'),'2160p'), 3) : [],  count(resolution(quality(streams,'WEB-DL'),'1440p','1080p')) > 3 ? slice(resolution(quality(streams,'WEB-DL'),'1440p','1080p'), 3) : [],  count(resolution(quality(streams,'WEB-DL'),'720p','Unknown')) > 1 ? slice(resolution(quality(streams,'WEB-DL'),'720p','Unknown'), 1) : [] )",
      "merge( count(resolution(quality(streams,'WEBRip'),'2160p')) > 3 ? slice(resolution(quality(streams,'WEBRip'),'2160p'), 3) : [],  count(resolution(quality(streams,'WEBRip'),'1440p','1080p')) > 3 ? slice(resolution(quality(streams,'WEBRip'),'1440p','1080p'), 3) : [],  count(resolution(quality(streams,'WEBRip'),'720p','Unknown')) > 1 ?  slice(resolution(quality(streams,'WEBRip'),'720p','Unknown'), 1) : [],  count(resolution(quality(streams,'HDRip','HC HD-Rip','DVDRip','HDTV'),'1080p')) > 3 ? slice(resolution(quality(streams,'HDRip','HC HD-Rip','DVDRip','HDTV'),'1080p'), 3) : [],  count(resolution(quality(streams,'HDRip','HC HD-Rip','DVDRip','HDTV'),'720p','Unknown')) > 1 ? slice(resolution(quality(streams,'HDRip','HC HD-Rip','DVDRip','HDTV'),'720p','Unknown'), 1) : [],  count(resolution(quality(streams,'Unknown'),'2160p')) > 1 ? slice(resolution(quality(streams,'Unknown'),'2160p'), 1) : [],  count(resolution(quality(streams,'Unknown'),'1440p','1080p')) > 1 ? slice(resolution(quality(streams,'Unknown'),'1440p','1080p'), 1) : [],  count(resolution(quality(streams,'Unknown'),'720p','Unknown')) > 1 ? slice(resolution(quality(streams,'Unknown'),'720p','Unknown'), 1) : [],  count(quality(streams,'Bluray REMUX','Bluray','WEB-DL','WEBRip')) > 5 ? quality(streams,'HDRip','HC HD-Rip','DVDRip','HDTV', 'CAM','TS','TC','SCR','Unknown'): count(quality(streams,'Bluray REMUX','Bluray','WEB-DL','WEBRip','HDRip','HC HD-Rip','DVDRip','HDTV')) > 5 ? quality(streams,'CAM','TS','TC','SCR','Unknown') : [],  count(negate(regexMatched(cached(streams), 'Bad'), regexMatched(cached(streams)))) >= 5 ? regexMatched(streams,'Bad') : [] )"
    ],
    "requiredStreamExpressions": [],
    "preferredStreamExpressions": [],
    "includedStreamExpressions": [],
    "rpdbUseRedirectApi": true,
    "resultLimits": {},
    "size": {
      "global": {
        "movies": [
          0,
          100000000000
        ],
        "series": [
          0,
          100000000000
        ]
      },
      "resolution": {
        "2160p": {
          "movies": [
            0,
            100000000000
          ]
        }
      }
    },
    "hideErrors": false,
    "tmdbAccessToken": "<template_placeholder>",
    "yearMatching": {
      "enabled": true,
      "tolerance": 1,
      "requestTypes": [
        "movie",
        "series"
      ],
      "addons": []
    },
    "titleMatching": {
      "mode": "exact",
      "enabled": true,
      "requestTypes": [
        "movie",
        "series"
      ],
      "addons": [],
      "similarityThreshold": 1
    },
    "seasonEpisodeMatching": {
      "enabled": true,
      "requestTypes": [
        "movie",
        "series"
      ],
      "addons": []
    },
    "precacheNextEpisode": true,
    "alwaysPrecache": true,
    "externalDownloads": false,
    "tvdbApiKey": "<optional_template_placeholder>",
    "tmdbApiKey": "<optional_template_placeholder>"
  }

}
